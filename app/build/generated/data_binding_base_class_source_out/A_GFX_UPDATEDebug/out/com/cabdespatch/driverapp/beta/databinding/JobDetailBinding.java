// Generated by view binder compiler. Do not edit!
package com.cabdespatch.driverapp.beta.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.cabdespatch.driverapp.beta.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class JobDetailBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageButton jobDetailBtnNavigate;

  @NonNull
  public final ImageButton jobDetailBtnPopOut;

  @NonNull
  public final ImageButton jobDetailBtnSpeak;

  @NonNull
  public final TextView jobDetailHeading;

  @NonNull
  public final ImageButton jobDetailIcon;

  @NonNull
  public final TextView jobDetailText;

  private JobDetailBinding(@NonNull RelativeLayout rootView,
      @NonNull ImageButton jobDetailBtnNavigate, @NonNull ImageButton jobDetailBtnPopOut,
      @NonNull ImageButton jobDetailBtnSpeak, @NonNull TextView jobDetailHeading,
      @NonNull ImageButton jobDetailIcon, @NonNull TextView jobDetailText) {
    this.rootView = rootView;
    this.jobDetailBtnNavigate = jobDetailBtnNavigate;
    this.jobDetailBtnPopOut = jobDetailBtnPopOut;
    this.jobDetailBtnSpeak = jobDetailBtnSpeak;
    this.jobDetailHeading = jobDetailHeading;
    this.jobDetailIcon = jobDetailIcon;
    this.jobDetailText = jobDetailText;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static JobDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static JobDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.job_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static JobDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.jobDetail_btnNavigate;
      ImageButton jobDetailBtnNavigate = ViewBindings.findChildViewById(rootView, id);
      if (jobDetailBtnNavigate == null) {
        break missingId;
      }

      id = R.id.jobDetail_btnPopOut;
      ImageButton jobDetailBtnPopOut = ViewBindings.findChildViewById(rootView, id);
      if (jobDetailBtnPopOut == null) {
        break missingId;
      }

      id = R.id.jobDetail_btnSpeak;
      ImageButton jobDetailBtnSpeak = ViewBindings.findChildViewById(rootView, id);
      if (jobDetailBtnSpeak == null) {
        break missingId;
      }

      id = R.id.jobDetailHeading;
      TextView jobDetailHeading = ViewBindings.findChildViewById(rootView, id);
      if (jobDetailHeading == null) {
        break missingId;
      }

      id = R.id.jobDetailIcon;
      ImageButton jobDetailIcon = ViewBindings.findChildViewById(rootView, id);
      if (jobDetailIcon == null) {
        break missingId;
      }

      id = R.id.jobDetailText;
      TextView jobDetailText = ViewBindings.findChildViewById(rootView, id);
      if (jobDetailText == null) {
        break missingId;
      }

      return new JobDetailBinding((RelativeLayout) rootView, jobDetailBtnNavigate,
          jobDetailBtnPopOut, jobDetailBtnSpeak, jobDetailHeading, jobDetailIcon, jobDetailText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
