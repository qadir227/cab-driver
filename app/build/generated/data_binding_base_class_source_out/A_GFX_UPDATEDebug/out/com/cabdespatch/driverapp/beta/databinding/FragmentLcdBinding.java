// Generated by view binder compiler. Do not edit!
package com.cabdespatch.driverapp.beta.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.cabdespatch.driverapp.beta.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentLcdBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LcdNumberBinding penceTens;

  @NonNull
  public final LcdNumberBinding penceUnit;

  @NonNull
  public final LcdNumberBinding poundsHundreds;

  @NonNull
  public final LcdNumberBinding poundsTens;

  @NonNull
  public final LcdNumberBinding poundsUnit;

  private FragmentLcdBinding(@NonNull RelativeLayout rootView, @NonNull LcdNumberBinding penceTens,
      @NonNull LcdNumberBinding penceUnit, @NonNull LcdNumberBinding poundsHundreds,
      @NonNull LcdNumberBinding poundsTens, @NonNull LcdNumberBinding poundsUnit) {
    this.rootView = rootView;
    this.penceTens = penceTens;
    this.penceUnit = penceUnit;
    this.poundsHundreds = poundsHundreds;
    this.poundsTens = poundsTens;
    this.poundsUnit = poundsUnit;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentLcdBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentLcdBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_lcd, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentLcdBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.pence_tens;
      View penceTens = ViewBindings.findChildViewById(rootView, id);
      if (penceTens == null) {
        break missingId;
      }
      LcdNumberBinding binding_penceTens = LcdNumberBinding.bind(penceTens);

      id = R.id.pence_unit;
      View penceUnit = ViewBindings.findChildViewById(rootView, id);
      if (penceUnit == null) {
        break missingId;
      }
      LcdNumberBinding binding_penceUnit = LcdNumberBinding.bind(penceUnit);

      id = R.id.pounds_hundreds;
      View poundsHundreds = ViewBindings.findChildViewById(rootView, id);
      if (poundsHundreds == null) {
        break missingId;
      }
      LcdNumberBinding binding_poundsHundreds = LcdNumberBinding.bind(poundsHundreds);

      id = R.id.pounds_tens;
      View poundsTens = ViewBindings.findChildViewById(rootView, id);
      if (poundsTens == null) {
        break missingId;
      }
      LcdNumberBinding binding_poundsTens = LcdNumberBinding.bind(poundsTens);

      id = R.id.pounds_unit;
      View poundsUnit = ViewBindings.findChildViewById(rootView, id);
      if (poundsUnit == null) {
        break missingId;
      }
      LcdNumberBinding binding_poundsUnit = LcdNumberBinding.bind(poundsUnit);

      return new FragmentLcdBinding((RelativeLayout) rootView, binding_penceTens, binding_penceUnit,
          binding_poundsHundreds, binding_poundsTens, binding_poundsUnit);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
