// Generated by view binder compiler. Do not edit!
package com.cabdespatch.driverapp.beta.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.cabdespatch.driverapp.beta.R;
import com.cabdespatch.driverapp.beta.views.CaptureSignatureView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPodBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayout actualcontent;

  @NonNull
  public final FrameLayout dlgContainer;

  @NonNull
  public final ImageButton layPODBtnClear;

  @NonNull
  public final ImageButton layPODBtnOk;

  @NonNull
  public final TextView layPODLblAccountNo;

  @NonNull
  public final TextView layPODLblJobID;

  @NonNull
  public final CaptureSignatureView layPODSig;

  private ActivityPodBinding(@NonNull RelativeLayout rootView, @NonNull LinearLayout actualcontent,
      @NonNull FrameLayout dlgContainer, @NonNull ImageButton layPODBtnClear,
      @NonNull ImageButton layPODBtnOk, @NonNull TextView layPODLblAccountNo,
      @NonNull TextView layPODLblJobID, @NonNull CaptureSignatureView layPODSig) {
    this.rootView = rootView;
    this.actualcontent = actualcontent;
    this.dlgContainer = dlgContainer;
    this.layPODBtnClear = layPODBtnClear;
    this.layPODBtnOk = layPODBtnOk;
    this.layPODLblAccountNo = layPODLblAccountNo;
    this.layPODLblJobID = layPODLblJobID;
    this.layPODSig = layPODSig;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPodBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPodBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_pod, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPodBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.actualcontent;
      LinearLayout actualcontent = ViewBindings.findChildViewById(rootView, id);
      if (actualcontent == null) {
        break missingId;
      }

      id = R.id.dlg_container;
      FrameLayout dlgContainer = ViewBindings.findChildViewById(rootView, id);
      if (dlgContainer == null) {
        break missingId;
      }

      id = R.id.layPOD_btnClear;
      ImageButton layPODBtnClear = ViewBindings.findChildViewById(rootView, id);
      if (layPODBtnClear == null) {
        break missingId;
      }

      id = R.id.layPOD_btnOk;
      ImageButton layPODBtnOk = ViewBindings.findChildViewById(rootView, id);
      if (layPODBtnOk == null) {
        break missingId;
      }

      id = R.id.layPOD_lblAccountNo;
      TextView layPODLblAccountNo = ViewBindings.findChildViewById(rootView, id);
      if (layPODLblAccountNo == null) {
        break missingId;
      }

      id = R.id.layPOD_lblJobID;
      TextView layPODLblJobID = ViewBindings.findChildViewById(rootView, id);
      if (layPODLblJobID == null) {
        break missingId;
      }

      id = R.id.layPOD_sig;
      CaptureSignatureView layPODSig = ViewBindings.findChildViewById(rootView, id);
      if (layPODSig == null) {
        break missingId;
      }

      return new ActivityPodBinding((RelativeLayout) rootView, actualcontent, dlgContainer,
          layPODBtnClear, layPODBtnOk, layPODLblAccountNo, layPODLblJobID, layPODSig);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
