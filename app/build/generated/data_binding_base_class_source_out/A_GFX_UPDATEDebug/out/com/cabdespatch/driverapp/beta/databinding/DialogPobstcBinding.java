// Generated by view binder compiler. Do not edit!
package com.cabdespatch.driverapp.beta.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.cabdespatch.driverapp.beta.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogPobstcBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayout actualcontent;

  @NonNull
  public final ImageButton dlgBtnBack;

  @NonNull
  public final LinearLayout dlgPOB;

  @NonNull
  public final LinearLayout dlgSTP;

  private DialogPobstcBinding(@NonNull RelativeLayout rootView, @NonNull LinearLayout actualcontent,
      @NonNull ImageButton dlgBtnBack, @NonNull LinearLayout dlgPOB, @NonNull LinearLayout dlgSTP) {
    this.rootView = rootView;
    this.actualcontent = actualcontent;
    this.dlgBtnBack = dlgBtnBack;
    this.dlgPOB = dlgPOB;
    this.dlgSTP = dlgSTP;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogPobstcBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogPobstcBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_pobstc, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogPobstcBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.actualcontent;
      LinearLayout actualcontent = ViewBindings.findChildViewById(rootView, id);
      if (actualcontent == null) {
        break missingId;
      }

      id = R.id.dlg_btnBack;
      ImageButton dlgBtnBack = ViewBindings.findChildViewById(rootView, id);
      if (dlgBtnBack == null) {
        break missingId;
      }

      id = R.id.dlg_POB;
      LinearLayout dlgPOB = ViewBindings.findChildViewById(rootView, id);
      if (dlgPOB == null) {
        break missingId;
      }

      id = R.id.dlg_STP;
      LinearLayout dlgSTP = ViewBindings.findChildViewById(rootView, id);
      if (dlgSTP == null) {
        break missingId;
      }

      return new DialogPobstcBinding((RelativeLayout) rootView, actualcontent, dlgBtnBack, dlgPOB,
          dlgSTP);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
