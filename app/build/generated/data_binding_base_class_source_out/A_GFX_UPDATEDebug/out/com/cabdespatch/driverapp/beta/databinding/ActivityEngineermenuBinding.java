// Generated by view binder compiler. Do not edit!
package com.cabdespatch.driverapp.beta.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.cabdespatch.driverapp.beta.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityEngineermenuBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final CheckBox engineerChkDemo;

  @NonNull
  public final CheckBox engineerChkFireData;

  @NonNull
  public final CheckBox engineerChkFixedLocation;

  @NonNull
  public final CheckBox engineerChkFullScreen;

  @NonNull
  public final CheckBox engineerChkLockdown;

  @NonNull
  public final CheckBox engineerChkLogFile;

  @NonNull
  public final CheckBox engineerChkYapiDebug;

  @NonNull
  public final LinearLayout engineerLayoutLaunchUrl;

  @NonNull
  public final EditText engineerTxtUrl;

  @NonNull
  public final Button engineermodeBtnDebug;

  @NonNull
  public final EditText txtLoc1Lat;

  @NonNull
  public final EditText txtLoc1Lon;

  @NonNull
  public final EditText txtLoc2Lat;

  @NonNull
  public final EditText txtLoc2Lon;

  private ActivityEngineermenuBinding(@NonNull RelativeLayout rootView,
      @NonNull CheckBox engineerChkDemo, @NonNull CheckBox engineerChkFireData,
      @NonNull CheckBox engineerChkFixedLocation, @NonNull CheckBox engineerChkFullScreen,
      @NonNull CheckBox engineerChkLockdown, @NonNull CheckBox engineerChkLogFile,
      @NonNull CheckBox engineerChkYapiDebug, @NonNull LinearLayout engineerLayoutLaunchUrl,
      @NonNull EditText engineerTxtUrl, @NonNull Button engineermodeBtnDebug,
      @NonNull EditText txtLoc1Lat, @NonNull EditText txtLoc1Lon, @NonNull EditText txtLoc2Lat,
      @NonNull EditText txtLoc2Lon) {
    this.rootView = rootView;
    this.engineerChkDemo = engineerChkDemo;
    this.engineerChkFireData = engineerChkFireData;
    this.engineerChkFixedLocation = engineerChkFixedLocation;
    this.engineerChkFullScreen = engineerChkFullScreen;
    this.engineerChkLockdown = engineerChkLockdown;
    this.engineerChkLogFile = engineerChkLogFile;
    this.engineerChkYapiDebug = engineerChkYapiDebug;
    this.engineerLayoutLaunchUrl = engineerLayoutLaunchUrl;
    this.engineerTxtUrl = engineerTxtUrl;
    this.engineermodeBtnDebug = engineermodeBtnDebug;
    this.txtLoc1Lat = txtLoc1Lat;
    this.txtLoc1Lon = txtLoc1Lon;
    this.txtLoc2Lat = txtLoc2Lat;
    this.txtLoc2Lon = txtLoc2Lon;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityEngineermenuBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityEngineermenuBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_engineermenu, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityEngineermenuBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.engineer_chkDemo;
      CheckBox engineerChkDemo = ViewBindings.findChildViewById(rootView, id);
      if (engineerChkDemo == null) {
        break missingId;
      }

      id = R.id.engineer_chkFireData;
      CheckBox engineerChkFireData = ViewBindings.findChildViewById(rootView, id);
      if (engineerChkFireData == null) {
        break missingId;
      }

      id = R.id.engineer_chkFixedLocation;
      CheckBox engineerChkFixedLocation = ViewBindings.findChildViewById(rootView, id);
      if (engineerChkFixedLocation == null) {
        break missingId;
      }

      id = R.id.engineer_chkFullScreen;
      CheckBox engineerChkFullScreen = ViewBindings.findChildViewById(rootView, id);
      if (engineerChkFullScreen == null) {
        break missingId;
      }

      id = R.id.engineer_chkLockdown;
      CheckBox engineerChkLockdown = ViewBindings.findChildViewById(rootView, id);
      if (engineerChkLockdown == null) {
        break missingId;
      }

      id = R.id.engineer_chkLogFile;
      CheckBox engineerChkLogFile = ViewBindings.findChildViewById(rootView, id);
      if (engineerChkLogFile == null) {
        break missingId;
      }

      id = R.id.engineer_chkYapiDebug;
      CheckBox engineerChkYapiDebug = ViewBindings.findChildViewById(rootView, id);
      if (engineerChkYapiDebug == null) {
        break missingId;
      }

      id = R.id.engineerLayoutLaunchUrl;
      LinearLayout engineerLayoutLaunchUrl = ViewBindings.findChildViewById(rootView, id);
      if (engineerLayoutLaunchUrl == null) {
        break missingId;
      }

      id = R.id.engineerTxtUrl;
      EditText engineerTxtUrl = ViewBindings.findChildViewById(rootView, id);
      if (engineerTxtUrl == null) {
        break missingId;
      }

      id = R.id.engineermode_btnDebug;
      Button engineermodeBtnDebug = ViewBindings.findChildViewById(rootView, id);
      if (engineermodeBtnDebug == null) {
        break missingId;
      }

      id = R.id.txt_loc1_lat;
      EditText txtLoc1Lat = ViewBindings.findChildViewById(rootView, id);
      if (txtLoc1Lat == null) {
        break missingId;
      }

      id = R.id.txt_loc1_lon;
      EditText txtLoc1Lon = ViewBindings.findChildViewById(rootView, id);
      if (txtLoc1Lon == null) {
        break missingId;
      }

      id = R.id.txt_loc2_lat;
      EditText txtLoc2Lat = ViewBindings.findChildViewById(rootView, id);
      if (txtLoc2Lat == null) {
        break missingId;
      }

      id = R.id.txt_loc2_lon;
      EditText txtLoc2Lon = ViewBindings.findChildViewById(rootView, id);
      if (txtLoc2Lon == null) {
        break missingId;
      }

      return new ActivityEngineermenuBinding((RelativeLayout) rootView, engineerChkDemo,
          engineerChkFireData, engineerChkFixedLocation, engineerChkFullScreen, engineerChkLockdown,
          engineerChkLogFile, engineerChkYapiDebug, engineerLayoutLaunchUrl, engineerTxtUrl,
          engineermodeBtnDebug, txtLoc1Lat, txtLoc1Lon, txtLoc2Lat, txtLoc2Lon);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
