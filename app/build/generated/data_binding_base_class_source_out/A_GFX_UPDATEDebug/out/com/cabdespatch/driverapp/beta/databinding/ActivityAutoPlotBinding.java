// Generated by view binder compiler. Do not edit!
package com.cabdespatch.driverapp.beta.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.cabdespatch.driverapp.beta.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAutoPlotBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView autoplotAllplots;

  @NonNull
  public final Button autoplotBtnPlot;

  @NonNull
  public final Button autoplotBtnPlotSQL;

  @NonNull
  public final Button autoplotBtnPlotSQLSpecial;

  @NonNull
  public final TextView autoplotInfo;

  @NonNull
  public final EditText autoplotLat;

  @NonNull
  public final EditText autoplotLon;

  private ActivityAutoPlotBinding(@NonNull LinearLayout rootView,
      @NonNull TextView autoplotAllplots, @NonNull Button autoplotBtnPlot,
      @NonNull Button autoplotBtnPlotSQL, @NonNull Button autoplotBtnPlotSQLSpecial,
      @NonNull TextView autoplotInfo, @NonNull EditText autoplotLat,
      @NonNull EditText autoplotLon) {
    this.rootView = rootView;
    this.autoplotAllplots = autoplotAllplots;
    this.autoplotBtnPlot = autoplotBtnPlot;
    this.autoplotBtnPlotSQL = autoplotBtnPlotSQL;
    this.autoplotBtnPlotSQLSpecial = autoplotBtnPlotSQLSpecial;
    this.autoplotInfo = autoplotInfo;
    this.autoplotLat = autoplotLat;
    this.autoplotLon = autoplotLon;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAutoPlotBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAutoPlotBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_auto_plot, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAutoPlotBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.autoplot_allplots;
      TextView autoplotAllplots = ViewBindings.findChildViewById(rootView, id);
      if (autoplotAllplots == null) {
        break missingId;
      }

      id = R.id.autoplot_btnPlot;
      Button autoplotBtnPlot = ViewBindings.findChildViewById(rootView, id);
      if (autoplotBtnPlot == null) {
        break missingId;
      }

      id = R.id.autoplot_btnPlotSQL;
      Button autoplotBtnPlotSQL = ViewBindings.findChildViewById(rootView, id);
      if (autoplotBtnPlotSQL == null) {
        break missingId;
      }

      id = R.id.autoplot_btnPlotSQLSpecial;
      Button autoplotBtnPlotSQLSpecial = ViewBindings.findChildViewById(rootView, id);
      if (autoplotBtnPlotSQLSpecial == null) {
        break missingId;
      }

      id = R.id.autoplot_info;
      TextView autoplotInfo = ViewBindings.findChildViewById(rootView, id);
      if (autoplotInfo == null) {
        break missingId;
      }

      id = R.id.autoplot_lat;
      EditText autoplotLat = ViewBindings.findChildViewById(rootView, id);
      if (autoplotLat == null) {
        break missingId;
      }

      id = R.id.autoplot_lon;
      EditText autoplotLon = ViewBindings.findChildViewById(rootView, id);
      if (autoplotLon == null) {
        break missingId;
      }

      return new ActivityAutoPlotBinding((LinearLayout) rootView, autoplotAllplots, autoplotBtnPlot,
          autoplotBtnPlotSQL, autoplotBtnPlotSQLSpecial, autoplotInfo, autoplotLat, autoplotLon);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
