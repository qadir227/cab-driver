// Generated by view binder compiler. Do not edit!
package com.cabdespatch.driverapp.beta.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.cabdespatch.driverapp.beta.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MessageitemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView messageitemMessagetext;

  @NonNull
  public final TextView msgitemcount;

  @NonNull
  public final TextView msgitemdetails;

  @NonNull
  public final LinearLayout msgitemheader;

  @NonNull
  public final ScrollView scroller;

  private MessageitemBinding(@NonNull LinearLayout rootView,
      @NonNull TextView messageitemMessagetext, @NonNull TextView msgitemcount,
      @NonNull TextView msgitemdetails, @NonNull LinearLayout msgitemheader,
      @NonNull ScrollView scroller) {
    this.rootView = rootView;
    this.messageitemMessagetext = messageitemMessagetext;
    this.msgitemcount = msgitemcount;
    this.msgitemdetails = msgitemdetails;
    this.msgitemheader = msgitemheader;
    this.scroller = scroller;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MessageitemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MessageitemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.messageitem, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MessageitemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.messageitem_messagetext;
      TextView messageitemMessagetext = ViewBindings.findChildViewById(rootView, id);
      if (messageitemMessagetext == null) {
        break missingId;
      }

      id = R.id.msgitemcount;
      TextView msgitemcount = ViewBindings.findChildViewById(rootView, id);
      if (msgitemcount == null) {
        break missingId;
      }

      id = R.id.msgitemdetails;
      TextView msgitemdetails = ViewBindings.findChildViewById(rootView, id);
      if (msgitemdetails == null) {
        break missingId;
      }

      id = R.id.msgitemheader;
      LinearLayout msgitemheader = ViewBindings.findChildViewById(rootView, id);
      if (msgitemheader == null) {
        break missingId;
      }

      id = R.id.scroller;
      ScrollView scroller = ViewBindings.findChildViewById(rootView, id);
      if (scroller == null) {
        break missingId;
      }

      return new MessageitemBinding((LinearLayout) rootView, messageitemMessagetext, msgitemcount,
          msgitemdetails, msgitemheader, scroller);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
